@using MRA.Jobs.SSR.Client.Components.Layout
@using MRA.Jobs.Client.Identity
@using MRA.Jobs.SSR.Client.Components.Pages.Admin
@using MRA.Jobs.SSR.Client.Components.Shared
@inject NavigationManager NavManager
@rendermode InteractiveServer
<Router AppAssembly="@typeof(Program).Assembly" Context="routeData">
    <Found>
            @if (NonLayout())
            {
                <RouteView RouteData="routeData" DefaultLayout="typeof(EmptyLayout)"/>
            }
            else
            {
                <CascadingAuthenticationState>
                    <AuthorizeView Policy="@ApplicationPolicies.Reviewer" Context="_">
                        <Authorized>
                            <RouteView RouteData="routeData" DefaultLayout="typeof(Dashboard)"/>
                        </Authorized>
    
                        <NotAuthorized>
                            <RouteView RouteData="routeData" DefaultLayout="typeof(MainLayout)"/>
                        </NotAuthorized>
                    </AuthorizeView>
                </CascadingAuthenticationState>
            }
        </Found>
        <NotFound>
            <CascadingAuthenticationState>
                <AuthorizeView Policy="@ApplicationPolicies.Reviewer" Context="_">
                    <Authorized>
                        <LayoutView Layout="typeof(Dashboard)">
                            <NotFound/>
                        </LayoutView>
                    </Authorized>
    
                    <NotAuthorized>
                        <LayoutView Layout="typeof(MainLayout)">
                            <NotFound/>
                        </LayoutView>
                    </NotAuthorized>
                </AuthorizeView>
            </CascadingAuthenticationState>
        </NotFound>
</Router>

@code
{
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await ContentService.InitializeCultureAsync();
    }

    private bool NonLayout()
    {
        var uri = NavManager.ToBaseRelativePath(NavManager.Uri);
        return uri.Equals("sign-up", StringComparison.OrdinalIgnoreCase) ||
               uri.Equals("sign-in", StringComparison.OrdinalIgnoreCase);
    }
}