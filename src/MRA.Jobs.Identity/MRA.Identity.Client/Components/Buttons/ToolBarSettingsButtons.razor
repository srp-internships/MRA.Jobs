@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage
@inject LayoutService LayoutService
@inject IContentService ContentService

<MudTooltip Duration="1000" Text="@ContentService["Profile:SelectLanguage"]">
    <MudMenu EndIcon="@Icons.Material.Filled.KeyboardArrowDown" Label="@LayoutService._lang"
             Dense="true" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter"
             LockScroll="true">
        <MudMenuItem OnClick="@(() => SelectLanguage("En"))">En</MudMenuItem>
        <MudMenuItem OnClick="@(() => SelectLanguage("Ru"))">Ru</MudMenuItem>
        <MudMenuItem OnClick="@(() => SelectLanguage("Tj"))">Tj</MudMenuItem>
    </MudMenu>
</MudTooltip>

<MudTooltip Duration="1000" Text="@(LayoutService.DarkModeToggle == DarkLightMode.System ? ContentService["Profile:SwitchtoLightTheme"] : LayoutService.DarkModeToggle == DarkLightMode.Dark ? ContentService["Profile:Switchtosystem"] : ContentService["Profile:SwitchtoDarkTheme"])">
    <MudIconButton Icon="@(LayoutService.DarkModeToggle == DarkLightMode.System ? @Icons.Material.Filled.AutoMode : LayoutService.DarkModeToggle == DarkLightMode.Dark ? @Icons.Material.Rounded.LightMode : @Icons.Material.Outlined.DarkMode)" Color="Color.Inherit" OnClick="@ToggleDarkMode" />
</MudTooltip>

@code {

    private async void SelectLanguage(string lang)
    {
        await LayoutService.ChangeLanguage(lang);
        StateHasChanged();
        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    }

    private async Task ToggleDarkMode()
    {
        await LayoutService.ToggleDarkMode();
        StateHasChanged();
    }

}