@page "/trainings/{Slug}"

@using Blazored.LocalStorage;
@using MRA.Jobs.Application.Contracts.TrainingVacancies.Responses;
@using MRA.Jobs.Client.Identity;
@using Microsoft.AspNetCore.Components.Authorization;
@inject AuthenticationStateProvider provider
@inject ITrainingService _trainingService
@inject IApplicationService ApplicationService


<div class="container">
    <div class="row align-items-center">
        <div class="col-8">
            <MudPaper Class="pa-16 ma-2">
                <MudText Typo="Typo.h2" Style="color: #129fd7; font-weight: 900;">@_training.Title</MudText>
                <MudText Typo="Typo.h6">Duration: @_training.Duration month(s)</MudText>
                <MudText Typo="Typo.h6">Published at: @_training.PublishDate.Date.Date</MudText>
                <MudText Typo="Typo.h6">Deadline: @_training.EndDate.Date.Date</MudText>
                <MudDivider />
                <MudText Typo="Typo.h5">Description</MudText>
                <MudText Typo="Typo.body1">@((MarkupString)@_training.Description)</MudText>
                </MudPaper>
            </div>
            <div class="col-4">
                <MudCard>
                    <MudCardContent>
                        <MudText Typo="Typo.h5" Color="Color.Info">Do You want to work at Silk Road Professionals?</MudText>
                        <MudText Typo="Typo.body2">Write a cover letter, answer few questions and send yout application!</MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <CascadingAuthenticationState>
                            <AuthorizeView>
                                <Authorized>
                                    @if (applied)
                                {
                                    <span class="text-success"> <i class="fa fa-check" aria-hidden="true"></i>Applied</span>
                                }
                                else
                                {
                                    <a href="/trainings/ApplytoTrainings/@Slug" class="btn btn-primary w-100">Apply</a>
                                }
                            </Authorized>
                            <NotAuthorized>
                                <a href="/sign-in" class="btn btn-primary w-100">Apply</a>
                            </NotAuthorized>
                        </AuthorizeView>
                    </CascadingAuthenticationState>
                </MudCardActions>
            </MudCard>
        </div>
    </div>
</div>



@code {
    [Parameter]
    public string Slug { get; set; }
    private TrainingVacancyDetailedResponse _training { get; set; } = new TrainingVacancyDetailedResponse();
    private bool applied = false;

    protected override async Task OnInitializedAsync()
    {
        _training = await _trainingService.GetBySlug(Slug);
        applied = await ApplicationExits();
    }

    private async Task<bool> ApplicationExits()
    {
        return await ApplicationService.ApplicationExist(Slug);
    }
}
