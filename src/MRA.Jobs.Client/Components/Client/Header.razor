@using Microsoft.AspNetCore.Components.Authorization
@inject ILocalStorageService LocalStorageService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<header class="header bg-light">
    <div class="container">
        <div class="w-100 row flex-row p-3">
            
            <div class="col-1">
                <a class="" href="#">
                    <img class="logo" src="./images/SRP_icon.png" alt="">
                </a>
            </div>
            <!-- Menu -->
            <div class="col-7 d-flex mx-3">
                <div class="w-100 d-flex flex-row justify-content-between align-items-center">
                    <div class="col-2">
                        <a href="vacancies" >О нас</a>
                    </div>
					<div class="col-2">
						<a href="vacancies">Вакансии</a>
					</div>
                </div>
            </div>
            <!-- End Menu -->
            
            <!-- Reg/Login -->
            <div class="col-3 d-flex">
                <div class="row flex-row w-100 justify-content-between align-items-center">
                   <AuthorizeView>
					   <Authorized>
						   <div class="col-6">
								<button @onclick="LogOut" class="btn btn-danger">LogOut</button>
						   </div>
					   </Authorized>
					   <NotAuthorized>
							<div class="col-6">
								<a href="Registration">Registration</a>
							</div>
							<div class="col-6">
								<a href="login">Login</a>
							</div>
					   </NotAuthorized>
				   </AuthorizeView>
					
                </div>
            </div>
        </div>
    </div>
</header>



@code {

	private async Task LogOut()
	{
		await LocalStorageService.RemoveAsync("AccessToken");
		await LocalStorageService.RemoveAsync("RefreshTOken");
		await AuthenticationStateProvider.GetAuthenticationStateAsync();
		NavigationManager.NavigateTo("/");
	}

}