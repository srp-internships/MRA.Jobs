@using MRA.Jobs.Application.Contracts.HiddenVacancies.Responses
@using MRA.Jobs.Client.Services.HiddenVacancies
@inject NavigationManager NavigationManager
@inject IHiddenVacancyService HiddenVacancyService
@inject IContentService ContentService


  <CascadingAuthenticationState>
            <AuthorizeView>
                <Authorized>
                    @if (_applicationWithHiddenVacancyStatus == null || !_applicationWithHiddenVacancyStatus.Applied)
                    {
                        <MudCardContent>
                            <MudText>
						@ContentService["Profile:Ifyouwouldliketonominateyourself,sendusyourСV."]
                            </MudText>
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton Variant="Variant.Filled" Color="Color.Primary"
                                       OnClick="ApplyHiddenVacancy" FullWidth="true">
						<MudText>@ContentService["Profile:UploadCV"]</MudText>
                            </MudButton>
                        </MudCardActions>
                    }
                    else
                    {
                        <MudCardContent>
                            <MudText>
						@ContentService["Profile:ThestatusofyourCVforyourcandidacyis"] <b>@_applicationWithHiddenVacancyStatus.Status.ToString()</b>
                            </MudText>
                        </MudCardContent>
                        @if (_applicationWithHiddenVacancyStatus.Status == ApplicationStatusDto.ApplicationStatus.Expired
                             || _applicationWithHiddenVacancyStatus.Status == ApplicationStatusDto.ApplicationStatus.Rejected
                             || _applicationWithHiddenVacancyStatus.Status == ApplicationStatusDto.ApplicationStatus.Refused)
                        {
                            <MudCardActions>
                                <MudButton Variant="Variant.Filled" Color="Color.Primary"
                                           OnClick="ApplyHiddenVacancy" FullWidth="true">
							<MudText>@ContentService["Profile:UploadNewCV"]</MudText>
                                </MudButton>
                            </MudCardActions>
                        }
                    }
                </Authorized>
                <NotAuthorized>

                    <MudCardContent>
                        <MudText >
					@ContentService["Profile:Ifyouwouldliketonominateyourself,signinandsendusyourСV."]
                        </MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton Variant="Variant.Filled" OnClick="SignIn" Color="Color.Primary" FullWidth="true">
					<MudText>@ContentService["VacancyDetails:Sign In"]</MudText>
                        </MudButton>
                    </MudCardActions>


                </NotAuthorized>
            </AuthorizeView>
        </CascadingAuthenticationState>

@code {
    private ApplicationWithHiddenVacancyStatus _applicationWithHiddenVacancyStatus;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        _applicationWithHiddenVacancyStatus = await HiddenVacancyService.GetApplicationStatus();
    }

    private void ApplyHiddenVacancy()
    {
        NavigationManager.NavigateTo("/upload-cv");
    }

    private void SignIn()
    {
        NavigationManager.NavigateTo("/sign-in");
    }

}