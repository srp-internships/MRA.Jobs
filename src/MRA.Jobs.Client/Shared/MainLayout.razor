@using MRA.Jobs.Client.Services
@using MRA.Jobs.Client.Enums
@inherits LayoutComponentBase
@inject IJSRuntime JS
@inject LayoutService LayoutService

<MudThemeProvider @ref="@_mudThemeProvider" Theme="@LayoutService.CurrentTheme" IsDarkMode="@LayoutService.IsDarkMode" IsDarkModeChanged="LayoutService.SetDarkMode"/>
<Header2/>
<MudDialogProvider/>
<MudSnackbarProvider/>
<MudMainContent>
    <main id="main" style="min-height: 100vh">
        <MudContainer MaxWidth="MaxWidth.ExtraLarge">
            @Body

        </MudContainer>

    </main>
</MudMainContent>

<MudText Style="text-align: center;">
    © 2023 Silk Road Professionals
</MudText>

<MudScrollToTop>
    <MudFab StartIcon="@Icons.Material.Filled.KeyboardArrowUp" Color="Color.Primary"/>
</MudScrollToTop>


@code
{
    
    
    private MudThemeProvider _mudThemeProvider;

    private async Task ApplyUserPreferences()
    {
        var defaultDarkMode = await _mudThemeProvider.GetSystemPreference();
        await LayoutService.ApplyUserPreferences(defaultDarkMode);
    }

    private async Task OnSystemPreferenceChanged(bool newValue)
    {
        await LayoutService.OnSystemPreferenceChanged(newValue);
    }
  
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await ApplyUserPreferences();
            await _mudThemeProvider.WatchSystemPreference(OnSystemPreferenceChanged);
            StateHasChanged();
            
            await JS.InvokeVoidAsync("loadScript", "/assets/vendor/bootstrap/js/bootstrap.bundle.min.js");
            await JS.InvokeVoidAsync("loadScript", "/assets/vendor/glightbox/js/glightbox.min.js");
            await JS.InvokeVoidAsync("loadScript", "/assets/vendor/purecounter/purecounter_vanilla.js");
            await JS.InvokeVoidAsync("loadScript", "/assets/vendor/isotope-layout/isotope.pkgd.min.js");
            await JS.InvokeVoidAsync("loadScript", "/assets/vendor/swiper/swiper-bundle.min.js");
            await JS.InvokeVoidAsync("loadScript", "/assets/vendor/aos/aos.js");
            await JS.InvokeVoidAsync("loadScript", "/assets/vendor/php-email-form/validate.js");
            await JS.InvokeVoidAsync("loadScript", "/assets/js/main.js");
            await JS.InvokeVoidAsync("loadScript", "/javascript.js");
        }
    }

    protected override void OnInitialized()
    {
        LayoutService.OnLanguageChanged += UpdateState;
        LayoutService.MajorUpdateOccured += UpdateTheme;
    }

    private void UpdateState()
    {
        StateHasChanged();
    }
    private void UpdateTheme(object sender, EventArgs e)
    {
        StateHasChanged();
    }

    public void Dispose()
    {
        LayoutService.OnLanguageChanged -= UpdateState;
        LayoutService.MajorUpdateOccured -= UpdateTheme;
    }
}