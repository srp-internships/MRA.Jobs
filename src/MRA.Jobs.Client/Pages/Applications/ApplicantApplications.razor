@page "/applications"
@using MRA.Jobs.Application.Contracts.Applications.Queries.GetApplicationWithPagination
@inject IApplicationService ApplicationService
@inject NavigationManager NavigationManager

<MudContainer>
    <MudText Typo="Typo.h4">
        <b>Applications</b>
    </MudText>
    <br/>

    <MudTable ServerData="@(new Func<TableState, Task<TableData<ApplicationListDto>>>(ServerReload))" Breakpoint="Breakpoint.Md"
              @ref="_table" Hover="true">
        <HeaderContent>
            <MudTh>Vacancy title</MudTh>
            <MudTh>Applied at</MudTh>
            <MudTh>Status name</MudTh>
            <MudTh>Action</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Vacancy title">@context.VacancyTitle</MudTd>
            <MudTd DataLabel="Applied at">@context.CreatedAt.ToString("D")</MudTd>
            <MudTd DataLabel="Status">@context.StatusName</MudTd>
            <MudTd DataLabel="Action">
                <ProgressTaskButton Variant="Variant.Filled" OnClick="@(e => OnClick(context.Slug))">More</ProgressTaskButton>
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager/>
        </PagerContent>
    </MudTable>

</MudContainer>

@code {
    private MudTable<ApplicationListDto> _table;

    private void OnClick(string slug)
    {
        NavigationManager.NavigateTo($"/ApplicationDetail/{slug}");
    }

    private async Task<TableData<ApplicationListDto>> ServerReload(TableState state)
    {
        var response = await ApplicationService.GetAllApplications(new GetApplicationsByFiltersQuery()
        {
            Page = state.Page+1,
            PageSize = state.PageSize
        });

        return new TableData<ApplicationListDto>()
        {
            Items = response.Items,
            TotalItems = response.TotalCount
        };
    }

}