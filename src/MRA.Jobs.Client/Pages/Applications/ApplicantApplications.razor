@page "/applications"
@inject IApplicationService applicationService
@inject NavigationManager NavigationManager

<MudContainer>
    <MudText Typo="Typo.h4">
        <b>Applications</b>
    </MudText>
    <br/>
    @if (applications is null)
    {
        <div style="text-align: center;">
            <MudProgressCircular Color="Color.Primary" Style="height:70px;width:70px;" Indeterminate="true"/>
        </div>
    }
    else
    {
        @if (applications.Items.Count == 0)
        {
            <MudText Typo="Typo.h5" Style="text-align: center">You do not have any active applications</MudText>
        }
        else
        {
            <MudTable Items="@applications.Items" Breakpoint="Breakpoint.Md">
                <HeaderContent>
                    <MudTh>Vacancy title</MudTh>
                    <MudTh>Applied at</MudTh>
                    <MudTh>Status name</MudTh>
                    <MudTh>Action</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Vacancy title">@context.VacancyTitle</MudTd>
                    <MudTd DataLabel="Applied at">@context.CreatedAt.ToString("D")</MudTd>
                    <MudTd DataLabel="Status">@context.StatusName</MudTd>
                    <MudTd DataLabel="Action">
                        <ProgressTaskButton Variant="Variant.Filled" Function="@((e) => OnClick(context.Slug))">More</ProgressTaskButton>
                    </MudTd>
                </RowTemplate>
                <PagerContent>
                    <MudTablePager/>
                </PagerContent>
            </MudTable>
        }
    }

</MudContainer>

@code {

    private PagedList<ApplicationListDto> applications;

    protected override async Task OnInitializedAsync()
    {
        var response = await applicationService.GetAllApplications();
        if (response is not null)
        {
            applications = response;
        }
    }

    private void OnClick(string slug)
    {
        NavigationManager.NavigateTo($"/ApplicationDetail/{slug}");
    }

}