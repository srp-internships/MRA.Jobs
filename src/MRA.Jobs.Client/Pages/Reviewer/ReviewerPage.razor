@page "/reviewer"
@attribute [Authorize]
@inject IApplicationService applicationService

<h3 class="m-3">Applications</h3>
@if (applications is not null && applications.TotalCount > 0)
{
    <MudGrid Spacing="@spacing">
        @foreach (var application in applications.Items)
        {
            <MudItem>
                <MudCard>
                    <MudCardContent>
                        <MudText>Applicant: @application.ApplicantId</MudText>
                        <MudText Typo="Typo.body2">Vacancy: @application.VacancyTitle</MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton OnClick="@((e) => OpenDialog(maxWidth, application.CoverLetter, application.VacancyResponses))">Show more</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        }
    </MudGrid>
}
else
{
    <h5>There are no applications. You can go and take a nap!</h5>
}
@code {
    string message = "Loading...";
    public int spacing { get; set; } = 2;
    private PagedList<ApplicationListDto> applications;
    protected override async Task OnInitializedAsync()
    {
        var response = await applicationService.GetAllApplications();
        if (response is not null)
        {
            applications = response;
            message = string.Empty;
        }
    }

    DialogOptions maxWidth = new DialogOptions() { MaxWidth = MaxWidth.Medium, FullWidth = true };

    private void OpenDialog(DialogOptions options, string coverLetter, IEnumerable<VacancyResponseDto> vacancyResponses)
    {
        Dialog.Show<MyDialog>("Applicant response", new DialogParameters { { "CoverLetter", coverLetter }, {"VacancyResponses", vacancyResponses } }, options);
    }
}