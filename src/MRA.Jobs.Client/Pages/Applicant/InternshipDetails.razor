@page "/internships/{Slug}"
@using MRA.Jobs.Application.Contracts.VacancyClient;
@layout MainLayout
@inject NavigationManager NavigationManager
@inject IInternshipService InternshipService
@inject IApplicationService ApplicationService
@using MRA.Jobs.Client.Components.Vacancies
@using MRA.Jobs.Client.Services.VacanciesServices.Internships

@if (serverError)
{
    <ServerErrorComponent />
}
else if (notFound)
{
    <MRA.Jobs.Client.Components.Extra.NotFound/>
}
else
{
	<VacancyDetails Slug="@Slug" _vacancyDetails="@details" Vacancy="internships" />
}

@code {
    private bool serverError = false;
    private bool notFound;

    [Parameter]
    public string Slug { get; set; }
    private VacancyDetailsResponse details;
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        try
        {

            var response = await InternshipService.GetBySlug(Slug);
            if (response is not null)
            {
                details = new VacancyDetailsResponse
                    {
                        Title = response.Title,
                        Description = response.Description,
                        Duration = response.Duration,
                        EndDate = response.EndDate,
                        Deadline = response.ApplicationDeadline,
                        PublishDate = response.PublishDate,
                        IsApplied = response.IsApplied,
                        Tags = response.Tags.ToArray()

                    };
            }
            else notFound = true;
        }
		catch (Exception)
		{
			serverError = true;
			StateHasChanged();
		}
	}
}