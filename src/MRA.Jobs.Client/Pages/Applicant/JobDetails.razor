@page "/jobs/{Slug}"
@using MRA.Jobs.Application.Contracts.VacancyClient;
@inject IVacancyService VacancyService

@using MRA.Jobs.Client.Components.Vacancies
@if (_serverError)
{
    <ServerErrorComponent />
}
else if (notFound)
{
    <MRA.Jobs.Client.Components.Extra.NotFound/>
}
else
{
	<VacancyDetails Slug="@Slug" vacancyDetails="@_details" Vacancy="jobs" />
}

@code {
    private bool _serverError;
    bool notFound;
    [Parameter]
    public string Slug { get; set; }

    private VacancyDetailsResponse _details;
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        try
        {
            var response = await VacancyService.GetBySlug(Slug);
            if (response is not null)
            {
                _details = new VacancyDetailsResponse
                    {
                        Title = response.Title,
                        Description = response.Description,
                        EndDate = response.EndDate,
                        PublishDate = response.PublishDate,
                        RequiredYearOfExperience = response.RequiredYearOfExperience,
                        IsApplied = response.IsApplied
                    };
            }
            else notFound = true;
        }
		catch (Exception)
		{
			_serverError = true;
			StateHasChanged();
		}
	}

}