@page "/jobs/{Slug}"
@using MRA.Jobs.Application.Contracts.VacancyClient;
@inject IVacancyService VacancyService

@using MRA.Jobs.Client.Components.Vacancies
@if (_serverError)
{
    <ServerErrorComponent/>
}
else
{
    <VacancyDetails Slug="@Slug" vacancyDetails="@_details" vacancy="jobs"/>
}

@code {
    private bool _serverError;
	
    [Parameter]
    public string Slug { get; set; }

    private VacancyDetailsResponse _details;
	private GetJobVacancyBySlugQuery getJobVacancyBySlug=new();
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        try
        {
			var response = await VacancyService.GetBySlug(Slug, getJobVacancyBySlug);
            if (response is not null)
            {
                _details = new VacancyDetailsResponse
                {
                    Title = response.Title,
                    Description = response.Description,
                    EndDate = response.EndDate,
                    PublishDate = response.PublishDate,
                    RequiredYearOfExperience = response.RequiredYearOfExperience
                };
            }
        }
        catch (Exception)
        {
            _serverError = true;
            StateHasChanged();
        }
    }

}