@page "/TrainingsInfo"
@using MRA.Jobs.Application.Contracts.TrainingVacancies.Responses;

@layout Main
@inject ITrainingService _trainingService

<div class="container">
	@if (_training == null)
	{
		<span>Loading...</span>
	}
	else
	{
		<h1>@_training.Title</h1>
		<div class="w-100 d-flex flex-row justify-content-between">
			<div class="Trainings w-100 bg-white shadow-lg rounded mb-4">
				<div class="d-flex flex-column p-3">

					<h3 class="mb-2 text-black">
						Description:
					</h3>
					<p class="mb-2 text-black">@_training.Description</p>
					<h3 class="mb-2 text-black">
						EndDate: 
					</h3>
					<p class="mb-2 text-black">@_training.EndDate</p>
					<h3 class="mb-2 text-black">
						Duration:
					</h3>
					<p class="mb-2 text-black">@_training.Duration</p>
					<h3 class="mb-2 text-black">
						Fees:
					</h3>
					<p class="mb-2 text-black">@_training.Fees</p>
				</div>
			</div>
			@*button*@
			<div class="Trainingsinfo">

				<div class="w-100 d-flex flex-row justify-content-between">
					<div class="card w-100 bg-white shadow-lg rounded mb-4">
						<div class="card-body">
							<h2 class="mb-2 text-black">Interested in a trainings?</h2>
							<a href="ApplytoTrainings/{@_training.Slug}/{@_training.Id}" class="btn btn-primary">Apply</a>
						</div>
					</div>
				</div>
			</div>
		</div>
	}
</div>



@code {
	private string slug = "-2023-8";
	private TrainingVacancyDetailedResponse _training { get; set; } = new TrainingVacancyDetailedResponse();

	protected override async Task OnInitializedAsync()
	{
		_training = await _trainingService.GetBySlugSinceCheckDate(slug);
	}
}
