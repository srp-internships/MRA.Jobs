@page "/dashboard/trainings"
@layout Dashboard
@using MRA.Jobs.Application.Contracts.TrainingVacancies.Responses;
@using BlazorMonaco.Editor
@inject ITrainingService TrainingService
@inject ICategoryService CategoryService
@inject ISnackbar Snackbar
@inject IDialogService DialogService
@inject LayoutService LayoutService
@inject IJSRuntime JsRuntime
@if (_serverError)
{
    <ServerErrorComponent/>
}
else
{
    @if (_categories == null)
    {
        <div style="text-align: center;">
            <MudProgressCircular Color="Color.Primary" Style="height:70px;width:70px;" Indeterminate="true"/>
        </div>
    }
    else
    {
        <MudGrid>
            <MudItem lg="12">
                <MudCardActions>
                    <MudText Typo="Typo.h4">
                        <b>Trainings</b>
                    </MudText>
                    <MudSpacer/>
                    <MudButton Disabled="@_panelOpenState" Color="Color.Primary" Variant="Variant.Filled" OnClick="@(() => _panelOpenState = !_panelOpenState)">
                        <MudText>Create New Training Vacancy</MudText>
                    </MudButton>
                </MudCardActions>
            </MudItem>
            <MudItem lg="12" hidden="@(!_panelOpenState)">
                <EditForm Model="@TrainingService.createCommand">
                    <FluentValidationValidator/>
                    <MudGrid>
                        <MudItem xs="12" lg="6">
                            <MudCard Class="rounded-4 mud-elevation-4">
                                <MudCardHeader>
                                    <CardHeaderContent>
                                        <MudText Style="color:#808080">
                                            <b>@_createOrEditHeader</b>
                                        </MudText>
                                    </CardHeaderContent>
                                </MudCardHeader>
                                <MudCardContent>
                                    <MudTextField @bind-Value="@TrainingService.createCommand.Title" Label="Title"
                                                  Variant="Variant.Outlined" For="@(() => TrainingService.createCommand.Title)"/>
                                    <MudTextField Lines="4" @bind-Value="@TrainingService.createCommand.ShortDescription" Label="ShortDescription"
                                                  Variant="Variant.Outlined" For="@(() => TrainingService.createCommand.ShortDescription)"/>
                                    <MudTextField Lines="10" @bind-Value="@TrainingService.createCommand.Description" Label="Description"
                                                  Variant="Variant.Outlined" For="@(() => TrainingService.createCommand.Description)"/>
                                </MudCardContent>
                            </MudCard>
                        </MudItem>
                        <MudItem xs="12" lg="6">
                            <MudCard Class="rounded-4 mud-elevation-4">
                                <MudCardHeader>
                                    <CardHeaderContent>
                                        <MudText Style="color: #808080">
                                            <b>Vacancy details</b>
                                        </MudText>
                                    </CardHeaderContent>
                                </MudCardHeader>
                                <MudCardContent>
                                    <MudGrid>
                                        <MudItem xs=12 lg="12">
                                            <MudText Style="color:rgb(128,128,128)" Typo="Typo.body2">Category</MudText>
                                            <MudSelect T="string" @bind-Value="@_selectedCategory"
                                                       Variant="Variant.Outlined">
                                                @foreach (var cat in _categories)
                                                {
                                                    <MudSelectItem Value="@cat.Name"/>
                                                }
                                            </MudSelect>
                                        </MudItem>
                                        <MudItem xs="12" lg="6">
                                            <MudTextField @bind-Value="@TrainingService.createCommand.Duration" Variant="Variant.Outlined" Label="Duration"></MudTextField>
                                        </MudItem>
                                        <MudItem xs="12" lg="6">
                                            <MudTextField @bind-Value="@TrainingService.createCommand.Fees" Label="Fees" Variant="Variant.Outlined"></MudTextField>
                                        </MudItem>
                                        <MudItem xs=12 lg="12">
                                            <MudText Style="color:rgb(128,128,128)" Typo="Typo.body2">Publish Date</MudText>
                                            <MudGrid>
                                                <MudItem xs=12 lg="6">
                                                    <MudDatePicker @bind-Date="@TrainingService.createCommand.PublishDate" Variant="Variant.Outlined"
                                                                   Label="Date" For="@(() => TrainingService.createCommand.PublishDate)"/>
                                                </MudItem>
                                                <MudItem xs=12 lg="6">
                                                    <MudTimePicker AmPm="true" @bind-Time="_publishDateTime" Variant="Variant.Outlined" Label="Time"/>
                                                </MudItem>
                                            </MudGrid>
                                        </MudItem>
                                        <MudItem xs=12 lg="12">
                                            <MudText Style="color:rgb(128,128,128)" Typo="Typo.body2">End Date</MudText>
                                            <MudGrid>
                                                <MudItem xs=12 lg="6">
                                                    <MudDatePicker @bind-Date="@TrainingService.createCommand.EndDate" Variant="Variant.Outlined"
                                                                   Label="Date" For="@(() => TrainingService.createCommand.EndDate)"/>

                                                </MudItem>
                                                <MudItem xs=12 lg="6">
                                                    <MudTimePicker AmPm="true" @bind-Time="_endDateTime" Variant="Variant.Outlined" Label="Time"/>
                                                </MudItem>
                                            </MudGrid>
                                        </MudItem>
                                    </MudGrid>
                                </MudCardContent>
                            </MudCard>

                        </MudItem>
                    </MudGrid>
                    <MudGrid>
                        <MudItem xs="12" lg="6">
                            <MudCard Class="rounded-4 mud-elevation-4">
                                <MudCardHeader>
                                    <CardHeaderContent>
                                        <MudText Style="color:rgb(128,128,128)">
                                            <b>Tasks</b>
                                        </MudText>
                                    </CardHeaderContent>
                                </MudCardHeader>
                                <MudCardContent>
                                    <MudExpansionPanels MultiExpansion="true">
                                        @foreach (var task in _tasks)
                                        {
                                            <MudExpansionPanel Text="@task.Title">
                                                <MudText> Description: @task.Description</MudText>
                                                <MudText>Template:</MudText>
                                                <MudElement HtmlTag="pre">
                                                    <MudElement HtmlTag="code">
                                                        @task.Template
                                                    </MudElement>
                                                </MudElement>
                                                <MudText>Test:</MudText>
                                                <MudElement HtmlTag="pre">
                                                    <MudElement HtmlTag="code">
                                                        @task.Test
                                                    </MudElement>
                                                </MudElement>
                                                <MudButton StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error"
                                                           Variant="Variant.Filled" OnClick="() => RemoveTask(task.Title)" aria-label="delete">
                                                    <MudText>Remove</MudText>
                                                </MudButton>
                                            </MudExpansionPanel>
                                        }
                                    </MudExpansionPanels>
                                    @if (_panelOpenState)
                                    {
                                        <br/>
                                        <MudTextField @bind-Value="_newTitle" OnKeyDown="@OnKeyDown" Label="Title"
                                                      Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentColor="Color.Secondary"/>
                                        <MudTextField Lines="5" @bind-Value="_newDescription" OnKeyDown="@OnKeyDown" Label="Description"
                                                      Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentColor="Color.Secondary"/>
                                        <MudText Style="color:rgb(128,128,128)" Typo="Typo.body2">Template</MudText>
                                        <StandaloneCodeEditor @ref="_editorTemplate" Id="sample-code-editor-123" ConstructionOptions="EditorConstructionOptions" OnDidInit="EditorOnDidInit" OnContextMenu="OnContextMenu"/>
                                        <MudText Style="color:rgb(128,128,128)" Typo="Typo.body2">Test</MudText>
                                        <StandaloneCodeEditor @ref="_editorTest" Id="sample-code-editor-456" ConstructionOptions="EditorConstructionOptions" OnDidInit="EditorOnDidInit" OnContextMenu="OnContextMenu"/>
                                        <MudButton Variant="Variant.Filled" Color="Color.Primary"
                                                   @onclick="@AddTask" Id="AddTask">
                                            <MudText>Add Task</MudText>
                                        </MudButton>
                                    }

                                </MudCardContent>
                            </MudCard>
                        </MudItem>
                        <MudItem xs="12" lg="6">
                            <MudCard Class="rounded-4 mud-elevation-4">
                                <MudCardHeader>
                                    <CardHeaderContent>
                                        <MudText Style="color:rgb(128,128,128)">
                                            <b>Vacancy questions</b>
                                        </MudText>
                                    </CardHeaderContent>
                                </MudCardHeader>
                                <MudCardContent>
                                    @foreach (var ques in _questions)
                                    {
                                        <MudText Typo="Typo.subtitle1">
                                            <MudChip>
                                                <MudIcon Icon="@Icons.Material.Filled.QuestionMark"/>
                                            </MudChip>

                                            @ques.Question
                                            <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" OnClick="() => RemoveQuestion(ques.Question)" aria-label="delete"></MudIconButton>
                                        </MudText>
                                        <MudDivider/>
                                    }
                                    <MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" OnClick="NewQuestionAsync">
                                        <MudText>Add Question</MudText>
                                    </MudButton>
                                </MudCardContent>
                            </MudCard>
                        </MudItem>
                        <MudItem xs="12" lg="12">
                            <MudCardActions>
                                <div hidden="@_isInserting">
                                    <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="@HandleSubmit">
                                        <MudText>
                                            Create
                                        </MudText>
                                    </MudButton>
                                </div>
                                <div hidden="@_isUpdating">
                                    <MudButton Variant="Variant.Filled" Color="Color.Warning" @onclick="@HandleUpdate">
                                        <MudText>
                                            Save changes
                                        </MudText>
                                    </MudButton>
                                </div>
                                <MudButton Variant="Variant.Filled" Color="Color.Dark" @onclick="@HandleCancel" Style="margin-left: 10px;">
                                    <MudText>
                                        Cancel
                                    </MudText>
                                </MudButton>
                            </MudCardActions>
                        </MudItem>
                    </MudGrid>
                </EditForm>
            </MudItem>
        </MudGrid>


        <MudTable ServerData="@(new Func<TableState, Task<TableData<TrainingVacancyListDto>>>(ServerReload))" hidden="@_panelOpenState"
                                                      Breakpoint="Breakpoint.Sm" Dense="true" Hover="true" @ref="_table">
            <ToolBarContent>
                <MudSpacer/>
                <MudTextField T="string" ValueChanged="@(s => OnSearch(s))" Placeholder="Search jobs" Adornment="Adornment.Start"
                              AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0" Immediate="true">
                </MudTextField>
            </ToolBarContent>
            <HeaderContent>
                <MudTh>
                    <strong>Title</strong>
                </MudTh>
                <MudTh>
                    <strong>Short description</strong>
                </MudTh>
                <MudTh>
                    <strong>Category</strong>
                </MudTh>
                <MudTh>
                    <strong>Publish date</strong>
                </MudTh>
                <MudTh>
                    <strong>End date</strong>
                </MudTh>
                <MudTh>
                    <strong>Duration</strong>
                </MudTh>
                <MudTh>
                    <strong>Fees</strong>
                </MudTh>
                <MudTh></MudTh>
                <MudTh></MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Title">@context.Title</MudTd>
                <MudTd DataLabel="Short description">
                    @(context.ShortDescription.Count() > 50 ? context.ShortDescription.Substring(0, 50) : context.ShortDescription)
                </MudTd>
                <MudTd DataLabel="Category">@context.Category</MudTd>
                <MudTd DataLabel="PublishDate">@context.PublishDate.ToString("D")</MudTd>
                <MudTd DataLabel="EndDate">@context.EndDate.ToString("D")</MudTd>
                <MudTd DataLabel="Duration">@context.Duration</MudTd>
                <MudTd DataLabel="Fees">@context.Fees</MudTd>
                <MudTd>
                    <MudIconButton @onclick="() => OnEditClick(context.Slug)" Icon="@Icons.Material.Filled.Edit" Variant="Variant.Text" Color="Color.Primary" Size="Size.Medium"/>
                </MudTd>
                <MudTd>
                    <MudIconButton @onclick="() => OnDeleteClick(context.Slug)" Icon="@Icons.Material.Filled.Delete" Variant="Variant.Text" Color="Color.Error" Size="Size.Medium"/>
                </MudTd>
            </RowTemplate>
            <NoRecordsContent>
                <MudText>No matching records found</MudText>
            </NoRecordsContent>
            <LoadingContent>
                <MudText>Loading...</MudText>
            </LoadingContent>
            <PagerContent>
                <MudTablePager/>
            </PagerContent>
        </MudTable>
    }
}

@code {


}