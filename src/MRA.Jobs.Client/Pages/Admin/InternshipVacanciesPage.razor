@page "/dashboard/internship"
@layout Dashboard

@using BlazorMonaco.Editor
@inject ISnackbar Snackbar;
@inject IInternshipService InternshipService
@inject ICategoryService CategoryService
@inject IDialogService DialogService
@inject LayoutService LayoutService
@inject IJSRuntime JsRuntime

@if (_serverError)
{
	<ServerErrorComponent />
}
else
{
	@if (_categories == null)
	{
		<div style="text-align: center;">
			<MudProgressCircular Color="Color.Primary" Style="height:70px;width:70px;" Indeterminate="true" />
		</div>
	}
	else
	{
		<MudGrid>
			<MudItem lg="12">
				<MudCardActions>
					<MudText Typo="Typo.h4">
						<b>@ContentService["Internships:InternshipsVacancy"]</b>
					</MudText>
					<MudSpacer />
					<MudButton Disabled="@_panelOpenState" Color="Color.Primary" Variant="Variant.Filled" OnClick="@(() => _panelOpenState = !_panelOpenState)">
						<MudText>@ContentService["Internships:CreateInternship"]</MudText>
						</MudButton>
					</MudCardActions>
				</MudItem>
				<MudItem lg="12" hidden="@(!_panelOpenState)">
					<EditForm Model="@InternshipService.createCommand">
						<FluentValidationValidator />
						<MudGrid>
							<MudItem xs="12" lg="6">
								<MudCard Class="rounded-4 mud-elevation-4">
									<MudCardHeader>
										<CardHeaderContent>
											<MudText Style="color:rgb(128,128,128)">
												<b>@_createOrEditHeader</b>
										</MudText>
									</CardHeaderContent>
								</MudCardHeader>
								<MudCardContent>
									<MudTextField @bind-Value="@InternshipService.createCommand.Title" Label=@ContentService["Internships:Title"]
												  Variant="Variant.Outlined" For="@(() => InternshipService.createCommand.Title)" />
									<MudTextField Lines="5" @bind-Value="@InternshipService.createCommand.ShortDescription" Label=@ContentService["Internships:ShortDescription"]
												  Variant="Variant.Outlined" For="@(() => InternshipService.createCommand.ShortDescription)" />
									<MudText>@ContentService["Profile:Description"]</MudText>
										<BlazoredTextEditor @ref="@_quillHtml">
											<ToolbarContent>
												<span class="ql-formats">
													<select class="ql-font">
														<option selected=""></option>
														<option value="serif"></option>
														<option value="monospace"></option>
													</select>
													<select class="ql-size">
														<option value="small"></option>
														<option selected=""></option>
														<option value="large"></option>
														<option value="huge"></option>
													</select>
												</span>
												<span class="ql-formats">
													<button class="ql-bold"></button>
													<button class="ql-italic"></button>
													<button class="ql-underline"></button>
													<button class="ql-strike"></button>
												</span>
												<span class="ql-formats">
													<select class="ql-color"></select>
													<select class="ql-background"></select>
												</span>
												<span class="ql-formats">
													<button class="ql-list" value="ordered"></button>
													<button class="ql-list" value="bullet"></button>
													<button class="ql-indent" value="-1"></button>
													<button class="ql-indent" value="+1"></button>
													<select class="ql-align">
														<option selected=""></option>
														<option value="center"></option>
														<option value="right"></option>
														<option value="justify"></option>
													</select>
												</span>
												<span class="ql-formats">
													<button class="ql-link"></button>
												</span>
											</ToolbarContent>
											<EditorContent>

											</EditorContent>
										</BlazoredTextEditor>
										<MudInput @bind-Value="@_imageLinkToInsertToEditor" />
										<MudButton Variant="Variant.Filled" Color="Color.Primary"
												   @onclick="InsertImage">
											@ContentService["Internships:InsertImage"]
									</MudButton>
								</MudCardContent>
							</MudCard>
						</MudItem>
						<MudItem xs="12" lg="6">
							<MudCard Class="rounded-4 mud-elevation-4">
								<MudCardHeader>
									<CardHeaderContent>
										<MudText Style="color:rgb(128,128,128)">
											<b>@ContentService["VacancyApplication:Vacancy Details"]</b>
										</MudText>
									</CardHeaderContent>
								</MudCardHeader>
								<MudCardContent>
									<MudGrid>
										<MudItem xs=12 lg="12">
											<MudText Style="color:rgb(128,128,128)" Typo="Typo.body2">@ContentService["Header:Category"]</MudText>
												<MudSelect T="string" Label=@ContentService["job:Selectcategory"] @bind-Value="@_selectedCategory"
														   Variant="Variant.Outlined">
													@foreach (var cat in _categories)
												{
													<MudSelectItem Value="@cat.Name" />
												}
											</MudSelect>
										</MudItem>
										<MudItem xs="12" lg="6">
											<MudTextField @bind-Value="@InternshipService.createCommand.Duration" Label=@ContentService["VacancyDetails:Duration"]
														  Variant="Variant.Outlined" For="@(() => InternshipService.createCommand.Duration)" />
										</MudItem>
										<MudItem xs="12" lg="6">
											<MudTextField @bind-Value="@InternshipService.createCommand.Stipend" Label=@ContentService["Internships:Stipend"]
														  Variant="Variant.Outlined" For="@(() => InternshipService.createCommand.Stipend)" />
										</MudItem>
										<MudItem xs=12 lg="12">
											<MudText Style="color:rgb(128,128,128)" Typo="Typo.body2">@ContentService["Internships:PublishDate"]</MudText>
												<MudGrid>
													<MudItem xs=12 lg="6">
														<MudDatePicker @bind-Date="@InternshipService.createCommand.PublishDate" Variant="Variant.Outlined"
																	   Label=@ContentService["Internships:Date"] For="@(() => InternshipService.createCommand.PublishDate)" />
													</MudItem>
													<MudItem xs=12 lg="6">
														<MudTimePicker AmPm="true" @bind-Time="_publishDateTime" Variant="Variant.Outlined" Label=@ContentService["Internships:Time"] />
													</MudItem>
												</MudGrid>
											</MudItem>
											<MudItem xs=12 lg="12">
												<MudText Style="color:rgb(128,128,128)" Typo="Typo.body2">@ContentService["Internships:ApplicationDeadline"]</MudText>
												<MudGrid>
													<MudItem xs=12 lg="6">
														<MudDatePicker @bind-Date="@InternshipService.createCommand.ApplicationDeadline" Variant="Variant.Outlined"
																	   Label=@ContentService["Internships:Date"] For="@(() => InternshipService.createCommand.ApplicationDeadline)" />
													</MudItem>
													<MudItem xs=12 lg="6">
														<MudTimePicker AmPm="true" @bind-Time="_applicationDeadlineTime" Variant="Variant.Outlined" Label=@ContentService["Internships:Time"] />
													</MudItem>
												</MudGrid>
											</MudItem>
											<MudItem xs=12 lg="12">
												<MudText Style="color:rgb(128,128,128)" Typo="Typo.body2">@ContentService["VacancyApplication:End Date"]</MudText>
												<MudGrid>
													<MudItem xs=12 lg="6">
														<MudDatePicker @bind-Date="@InternshipService.createCommand.EndDate" Variant="Variant.Outlined"
																	   Label=@ContentService["Internships:Date"] For="@(() => InternshipService.createCommand.EndDate)" />

													</MudItem>
													<MudItem xs=12 lg="6">
														<MudTimePicker AmPm="true" @bind-Time="_endDateTime" Variant="Variant.Outlined" Label=@ContentService["Internships:Time"] />
													</MudItem>
												</MudGrid>
											</MudItem>
										</MudGrid>
									</MudCardContent>
								</MudCard>
							</MudItem>
						</MudGrid>
						<MudGrid>

							<MudItem xs="12" lg="6">
								<MudCard Class="rounded-4 mud-elevation-4">
									<MudCardHeader>
										<CardHeaderContent>
											<MudText Style="color:rgb(128,128,128)">
												<b>@ContentService["Internships:Tasks"]</b>
										</MudText>
									</CardHeaderContent>
								</MudCardHeader>
								<MudCardContent>
									<MudExpansionPanels MultiExpansion="true">
										@foreach (var task in _tasks)
										{
											<MudExpansionPanel Text="@task.Title">
												<MudText> @ContentService["Profile:Description"]: @task.Description</MudText>
													<MudText>@ContentService["Internships:Template"]:</MudText>
													<MudElement HtmlTag="pre">
														<MudElement HtmlTag="code">
															@task.Template
													</MudElement>
												</MudElement>
												<MudText>@ContentService["Internships:Test"]:</MudText>
													<MudElement HtmlTag="pre">
														<MudElement HtmlTag="code">
															@task.Test
													</MudElement>
												</MudElement>
												<MudButton StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error"
														   Variant="Variant.Filled" OnClick="() => RemoveTask(task.Title)" aria-label="delete">
													<MudText>@ContentService["Internships:Remove"]</MudText>
													</MudButton>
												</MudExpansionPanel>
										}
									</MudExpansionPanels>
									@if (_panelOpenState)
									{
										<br />
										<MudTextField @bind-Value="_newTitle" Label=@ContentService["Internships:Title"]
													  Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentColor="Color.Secondary" />
										<MudTextField Lines="5" @bind-Value="_newDescription" Label=@ContentService["Profile:Description"]
													  Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentColor="Color.Secondary" />
										<MudText Style="color:rgb(128,128,128)" Typo="Typo.body2">@ContentService["Internships:Template"]</MudText>
										<StandaloneCodeEditor @ref="_editorTemplate" Id="sample-code-editor-123" ConstructionOptions="EditorConstructionOptions" OnDidInit="EditorOnDidInit" OnContextMenu="OnContextMenu" />
										<MudText Style="color:rgb(128,128,128)" Typo="Typo.body2">@ContentService["Internships:Test"]</MudText>
										<StandaloneCodeEditor @ref="_editorTest" Id="sample-code-editor-456" ConstructionOptions="EditorConstructionOptions" OnDidInit="EditorOnDidInit" OnContextMenu="OnContextMenu" />
										<MudButton Variant="Variant.Filled" Color="Color.Primary"
												   @onclick="@AddTask" Id="AddTask">
											<MudText>@ContentService["Internships:AddTask"]</MudText>
											</MudButton>
									}
								</MudCardContent>
							</MudCard>
						</MudItem>
						<MudItem xs="12" lg="6">
							<MudCard Class="rounded-4 mud-elevation-4">
								<MudCardHeader>
									<CardHeaderContent>
										<MudText Style="color:rgb(128,128,128)">
											<b>@ContentService["Internships:Vacancyquestions"]</b>
										</MudText>
									</CardHeaderContent>
								</MudCardHeader>
								<MudCardContent>
									@foreach (var ques in _questions)
									{
										<MudText Typo="Typo.subtitle1">
											<MudChip>
												<MudIcon Icon="@Icons.Material.Filled.QuestionMark" />
											</MudChip>

											@ques.Question
											<MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" OnClick="() => RemoveQuestion(ques.Question)" aria-label="delete"></MudIconButton>
										</MudText>
										<MudDivider />
									}
									<MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" OnClick="NewQuestionAsync">
										<MudText>@ContentService["Internships:AddQuestion"]</MudText>
										</MudButton>
									</MudCardContent>
								</MudCard>
							</MudItem>

							<MudItem xs="12" lg="12">
								<MudCardActions>
									<div hidden="@_isInserting">
										<MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" @onclick="@HandleSubmit">
											<MudText>
												@ContentService["Internships:Create"]
										</MudText>
									</MudButton>
								</div>
								<div hidden="@_isUpdating">
									<MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Warning" @onclick="@HandleUpdate">
										<MudText>
											@ContentService["Profile:Savechanges"]
										</MudText>
									</MudButton>
								</div>
								<MudButton Variant="Variant.Filled" Color="Color.Dark" @onclick="@HandleCancel" Style="margin-left: 10px;">
									<MudText>
										@ContentService["Profile:Cancel"]
									</MudText>
								</MudButton>
							</MudCardActions>

						</MudItem>
					</MudGrid>
				</EditForm>
			</MudItem>
		</MudGrid>
		<MudTable ServerData="@(new Func<TableState, Task<TableData<InternshipVacancyListResponse>>>(ServerReload))" hidden="@_panelOpenState"
				  Breakpoint="Breakpoint.Sm" Dense="true" Hover="true" @ref="_table">
			<ToolBarContent>
				<MudSpacer />
				<MudTextField T="string" ValueChanged="@(s => OnSearch(s))" Placeholder=@ContentService["Internships:Searchjobs"] Adornment="Adornment.Start"
							  AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0" Immediate="true">
				</MudTextField>
			</ToolBarContent>
			<HeaderContent>
				<MudTh>
					<strong>@ContentService["Internships:Title"]</strong>
				</MudTh>
				<MudTh>
					<strong>@ContentService["Internships:ShortDescription"]</strong>
				</MudTh>
				<MudTh>
					<strong>@ContentService["VacancyDetails:Duration"]</strong>
				</MudTh>
				<MudTh>
					<strong>@ContentService["Internships:Stipend"]</strong>
				</MudTh>
				<MudTh>
					<strong>@ContentService["Header:Category"]</strong>
				</MudTh>
				<MudTh>
					<strong>@ContentService["Internships:PublishDate"]</strong>
				</MudTh>
				<MudTh>
					<strong>@ContentService["Internships:ApplicationDeadline"]</strong>
				</MudTh>
				<MudTh>
					<strong>@ContentService["VacancyApplication:End Date"]</strong>
				</MudTh>
				<MudTh></MudTh>
				<MudTh></MudTh>
			</HeaderContent>
			<RowTemplate>
				<MudTd DataLabel=@ContentService["Internships:Title"]>@context.Title</MudTd>
					<MudTd DataLabel=@ContentService["Internships:ShortDescription"]>
						@(context.ShortDescription.Length > 50 ? context.ShortDescription.Substring(0, 50) : context.ShortDescription)
					</MudTd>
					<MudTd DataLabel=@ContentService["VacancyDetails:Duration"]>@context.Duration</MudTd>
					<MudTd DataLabel=@ContentService["Internships:Stipend"]>@context.Stipend</MudTd>
					<MudTd DataLabel=@ContentService["Header:Category"]>@context.Category</MudTd>
					<MudTd DataLabel=@ContentService["Internships:PublishDate"]>@context.PublishDate.ToString("D")</MudTd>
					<MudTd DataLabel=@ContentService["Internships:ApplicationDeadline"]>@context.ApplicationDeadline</MudTd>
					<MudTd DataLabel=@ContentService["VacancyApplication:End Date"]>@context.EndDate.ToString("D")</MudTd>
					<MudTd>
						<MudIconButton @onclick="() => OnEditClick(context.Slug)" Icon="@Icons.Material.Filled.Edit" Variant="Variant.Text" Color="Color.Primary" Size="Size.Medium" />
					</MudTd>
					<MudTd>
						<MudIconButton @onclick="() => OnDeleteClick(context.Slug)" Icon="@Icons.Material.Filled.Delete" Variant="Variant.Text" Color="Color.Error" Size="Size.Medium" />
					</MudTd>
				</RowTemplate>
				<NoRecordsContent>
					<MudText>@ContentService["UserManager:Nomatchingrecords"]</MudText>
				</NoRecordsContent>
				<LoadingContent>
					<MudText>@ContentService["UserManager:Loading"]</MudText>
				</LoadingContent>
				<PagerContent>
					<MudTablePager />
				</PagerContent>
			</MudTable>
	}
}