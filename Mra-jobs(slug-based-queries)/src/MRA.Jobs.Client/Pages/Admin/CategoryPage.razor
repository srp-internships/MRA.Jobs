@page "/dashboard/categories"
@layout Dashboard
@using MRA.Jobs.Application.Contracts.VacancyCategories.Responses;
@inject ICategoryService CService

<h1>Category</h1>

@if (_category == null)
{
    <div>Loading</div>
}
else
{
    <MatAccordion>
        <MatExpansionPanel @bind-Expanded="@panelOpenState">
            <MatExpansionPanelSummary>
                <MatExpansionPanelHeader>Inserting a new Category Data</MatExpansionPanelHeader>
            </MatExpansionPanelSummary>
            <MatExpansionPanelDetails>
                <MatTextField PlaceHolder="data" @bind-Value="@CService.creatingEntity.Name"></MatTextField>
                <MatButton  Outlined="true" @onclick="@CService.OnSaveCreateClick">Insert</MatButton>
            </MatExpansionPanelDetails>
        </MatExpansionPanel>
    </MatAccordion>

    <MatTable Items="@CService.Category" ShowPaging="false" RequestApiOnlyOnce="true" RowClass="tester" class="mat-elevation-z5" PageSize="100">
        <MatTableHeader>
            <th>Name</th>
            <th>Actions</th>
        </MatTableHeader>
        <MatTableRow>
            <td>
                @if (CService.updatingEntity?.Id == context.Id)
                {
                    <MatTextField @bind-Value="@CService.updatingEntity.Name"></MatTextField>
                }
                else
                {
                    @context.Name
                }
            </td>
            <td>
                @if (CService.updatingEntity?.Id == context.Id)
                {
                    <MatButton OnClick="@CService.OnSaveUpdateClick" Style="color:#2094CC" Icon="edit">Save</MatButton>
                }
                else
                {
                    <MatButton @onclick="() =>CService.OnUpdateClick(context)" Style="color:#2094CC" Icon="edit">Update</MatButton>
                }
                <MatButton @onclick="()=>CService.OnDeleteClick(context.Id)" Style="color:#2094CC" Icon="delete">Delete</MatButton>
            </td>
        </MatTableRow>
    </MatTable>
}
        
@code {
    private List<CategoryResponse> _category;
    bool panelOpenState;

    protected override async Task OnInitializedAsync()
    {
        _category = await CService.GetAllCategory();  
        Console.WriteLine(CService.Category);
    }
}
